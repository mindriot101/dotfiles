#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import os
import sys
import subprocess as sp

NOTES_DIR = os.path.realpath(os.path.join(os.path.expanduser('~'), 'notes'))


def edit(filename, editor):
    if sys.platform.lower() == 'darwin':
        cmd = ['open', filename, '-a', editor]
    else:
        cmd = [editor, filename]
    sp.check_call(cmd)


def make_title(text):
    number_of_underlines = len(text)
    return '{text}\n{underlines}'.format(
        text=text,
        underlines='=' * number_of_underlines)


def initialise_file(filename, title):
    if not os.path.isfile(filename):
        with open(filename, 'w') as outfile:
            outfile.write(make_title(title) + '\n')


def _compile(file_path, compile_to):
    cmd = ['pandoc', '-f', 'markdown_github', '-t', compile_to, file_path]
    sp.check_call(cmd)


def main(args):
    title = (os.path.basename(args.stub).capitalize().replace('_', ' ')
             .replace('-', ' '))
    file_path = '{}.md'.format(os.path.join(NOTES_DIR, *args.stub.split('/')))
    parent_dirs = os.path.dirname(file_path)
    if not os.path.isdir(parent_dirs):
        os.makedirs(parent_dirs)
    initialise_file(file_path, title=title)
    if args._compile:
        _compile(file_path, args.compile_to)
    else:
        edit(file_path, args.editor)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('stub')
    parser.add_argument('-e', '--editor', required=False, default='macvim')
    parser.add_argument('-c', '--compile', action='store_true',
            dest='_compile')
    parser.add_argument('-t', '--compile-to', required=False, default='html')
    main(parser.parse_args())
