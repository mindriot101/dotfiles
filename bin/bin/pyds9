#!/usr/bin/env python
# -*- coding: utf-8 -*-

import time
import argparse
import logging
try:
    import ds9
except ImportError:
    print('Program requires installation of ds9')
    exit(1)

try:
    import IPython
except ImportError:
    print('Program requires IPython installation')
    exit(1)
try:
    from astropy.io import fits as pyfits
except ImportError:
    try:
        import pyfits
    except ImportError:
        has_fits = False
    else:
        has_fits = True

else:
    has_fits = True


logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s|%(name)s|%(levelname)s|%(message)s')
logger = logging.getLogger('pyds9')

def open_file(d, fname):
    try:
        d.set('file {}'.format(fname))
    except ValueError as err:
        if 'XPA$ERROR Unable to load fits' in str(err) and has_fits:
            logger.exception(
                'Cannot load fits file natively, using pyfits')
            d.set_np2arr(pyfits.getdata(fname).astype(float))
        else:
            raise



def main(args):
    d = ds9.ds9()
    time.sleep(0.5)
    open_file(d, args.filename)
    d.set('preserve pan yes')
    d.set('preserve scale yes')

    if args.zscale:
        d.set('zscale')

    header = 'DS9 instance in object `d`'
    if has_fits:
        f = pyfits.open(args.filename)
        header += '\npyfits instance in object `f`'

    IPython.embed(banner1='', header=header)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('filename')
    parser.add_argument('--zscale', action='store_true')
    main(parser.parse_args())
