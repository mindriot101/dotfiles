export PATH=/usr/local/bin:${PATH}
fpath=($HOME/.zsh/func $HOME/.zsh/completion $fpath)
typeset -U fpath

autoload -U compinit
compinit


# Emacs keybindings
bindkey -e
bindkey "^R" history-incremental-search-backward

# Set up editor in command line
autoload edit-command-line
zle -N edit-command-line
bindkey '^Xe' edit-command-line

autoload -U colors
colors

setopt interactivecomments
setopt rmstarsilent
setopt prompt_subst
setopt inc_append_history
setopt share_history
unsetopt auto_pushd

# Only unique history entries in the reverse history search HIST_FIND_NO_DUPS=1
setopt hist_ignore_all_dups
setopt hist_ignore_dups


# Ignore duplicate history entries
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes

# Speed up completion
zstyle ':completion:*' accept-exact '*(N)'

# Use a cache for completion
zstyle ':completion:*' use-cache on


HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000

# Function to attach to a session. If the session is not specified then
#just run `tmux attach`, otherwise add a -t flag
function _tmux_attach() {
    if [ $1 ]; then
        tmux attach -t $1
    else
        tmux attach
    fi
}

# From GRB
function mcd() { mkdir -p $1 && cd $1 }

# Taken from http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/ - quick switch back to vim
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    fg
    zle redisplay
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# Alias some tmux commands
alias ta=_tmux_attach
alias tns="tmux new-session -s"
alias tls="tmux ls"

# Run irssi with the correct TERM variable
alias irssi="TERM=screen-256color irssi"

export GOPATH=${HOME}/Development/gocode
export PATH=${HOME}/.bin:${PATH}:bin

export EDITOR=vim_nox
export VISUAL=${EDITOR}
export BIBINPUTS=${HOME}/work/central-bibliography:${BIBINPUTS}
export TERM=xterm-256color
export LESS='-FXR'

# Taken from grb's zshrc

# By default, zsh considers many characters part of a word (e.g., _ and -).
# Narrow that down to allow easier skipping through words via M-f and M-b.
export WORDCHARS='*?[]~&;!$%^<>'

# run ipython with no arguments, but normal python if args
function python() {
    if [[ $# -ge 1 ]]; then
        command python $*
    else
        command ipython --pylab
    fi
}

alias py='python'
alias ipy='ipython'
alias pydoc='=python -m pydoc'
alias vi=vim_nox
alias g='git'
alias gst='=git st'
alias gcm='=git commit -m'
alias gse='=git sync && exit'
alias sc="=vim +Scratch"
alias es='exec $SHELL'

# Update vim plugins
alias vbi='=vim +BundleInstall +qa'
alias vbu="=vim '+BundleInstall!'"

# Ruby aliases
alias bcb='bundle check; bundle install --binstubs .bundle/bin'
alias be='bundle exec'

if which hub > /dev/null; then alias git=hub; fi

# Function for finding my pi
function __active_interface() {
    local ifconfig_path=/sbin/ifconfig
    for interface in en0 en1; do
        if ${ifconfig_path} ${interface} | xargs | grep -q 192 2>&1 >/dev/null; then
            echo $interface
            return
        fi
    done
}

function find_pi() {
    echo "Usage may require sudo password"
    sudo arp-scan --interface=`__active_interface` --localnet | grep b8:27:eb | awk '{print $1}'
}

case $OSTYPE in
    linux*)
        export BROWSER=firefox
        export STORAGE=/storage/astro2/`whoami`
        export BUILD_PREFIX="${STORAGE}/prefix"
        export PATH=${BUILD_PREFIX}/bin:${PATH}:${HOME}/.gem/ruby/1.8/bin
        export LD_LIBRARY_PATH=${BUILD_PREFIX}/lib:${LD_LIBRARY_PATH}
        export LS_OPTIONS=--color=never

        # Set up the module command
        function module() { eval `modulecmd zsh $*`; }

        VIRTUALENV_DIR=${STORAGE}/PythonEnv
        VIRTUALENV_SOURCE_FILE=${VIRTUALENV_DIR}/bin/activate
        if [[ -f ${VIRTUALENV_SOURCE_FILE} ]]; then
            # Set up the python environment
            # Set the environment variable for only this env to disable the prompt
            VIRTUAL_ENV_DISABLE_PROMPT=1 source ${VIRTUALENV_SOURCE_FILE}
            # export PYTHONPATH=${VIRTUALENV_DIR}/lib/python2.7/site-packages:$PYTHONPATH
        fi

        alias lsc='ls --color=auto'
        export work=${HOME}/work/
        alias open='xdg-open 2>/dev/null'

        export CHRUBY_PATH=${BUILD_PREFIX}/share/chruby
        ;;
    darwin*)
        export PATH=${PATH}:/usr/texbin:${GOPATH}/bin:/usr/local/sbin:/sbin:/usr/sbin
        alias gvim=mvim
        alias gview=mview
        alias -g awk=gawk
        alias lsc='ls -G'
        export work=${HOME}/work/Warwick/PostDoc/
        export CHRUBY_PATH=/usr/local/opt/chruby/share/chruby
        ;;
esac

# Configure chruby
source ${CHRUBY_PATH}/chruby.sh 2>/dev/null && \
source ${CHRUBY_PATH}/auto.sh && \
chruby 2.0

export WASP="${work}/WASP"
export NGTS="${work}/NGTS"
alias work="cd ${work} && pwd && ls"
alias ngts="cd ${NGTS} && pwd && ls"
alias wasp="cd ${WASP} && pwd && ls"
alias dotfiles="cd ${HOME}/dotfiles && pwd"
alias dev="cd ${HOME}/Development && pwd && ls"

# Function to make a new tmux session at a variable location
function make-tmux-session() {
    if [[ $# -gt 0 ]]; then
        if [[ $# -gt 1 ]]; then
            return
        fi

        DIRNAME="$1"
        if [[ ! -d ${DIRNAME} ]]; then
            mkdir ${DIRNAME}
        fi

    else
        DIRNAME=$(pwd)
    fi

    cd $DIRNAME
    TMUXNAME=$(basename `pwd`)
    tns ${TMUXNAME}

}

# Source the custom zshrc.local file in the system
if [[ -f ${HOME}/.zshrc.local ]]; then
    source ${HOME}/.zshrc.local
fi

# Finally source the theme
source ${HOME}/.zsh/srwalker101.zsh-theme
