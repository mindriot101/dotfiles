export PATH=/usr/local/bin:${PATH}
fpath=($HOME/.zsh/func $HOME/.zsh/completion $fpath)
typeset -U fpath

autoload -U compinit
compinit

autoload -U bashcompinit

# Emacs keybindings
bindkey -e
bindkey "^R" history-incremental-search-backward

# Set up editor in command line
autoload edit-command-line
zle -N edit-command-line
bindkey '^Xe' edit-command-line

autoload -U colors
colors

setopt interactivecomments
setopt rmstarsilent
setopt prompt_subst
setopt inc_append_history
setopt share_history
unsetopt auto_pushd

# Only unique history entries in the reverse history search HIST_FIND_NO_DUPS=1
setopt hist_ignore_all_dups
setopt hist_ignore_dups


# Ignore duplicate history entries
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes

# Speed up completion
zstyle ':completion:*' accept-exact '*(N)'

# Use a cache for completion
zstyle ':completion:*' use-cache on


HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

# Function to attach to a session. If the session is not specified then
#just run `tmux attach`, otherwise add a -t flag
function _tmux_attach() {
    if [ $1 ]; then
        tmux attach -t $1
    else
        tmux attach
    fi
}

# From GRB
function mcd() { mkdir -p $1 && cd $1 }

# Alias some tmux commands
alias ta=_tmux_attach
alias tns="tmux new-session -As"
alias tls="tmux ls"
alias m=make

# Function to make a new tmux session at a variable location
function tnew() {
    if [[ $# -gt 0 ]]; then
        if [[ $# -gt 1 ]]; then
            return
        fi

        DIRNAME="$1"
        if [[ ! -d ${DIRNAME} ]]; then
            mkdir ${DIRNAME}
        fi

    else
        DIRNAME=$(pwd)
    fi

    cd $DIRNAME
    TMUXNAME=$(basename `pwd`)
    tns ${TMUXNAME}

}


# Run irssi with the correct TERM variable
alias irssi="TERM=screen-256color irssi"

export GOPATH=${HOME}/Development/gocode
export PATH=${HOME}/.bin:${HOME}/.cabal/bin:${PATH}:${HOME}/bin

export EDITOR=vim
export VISUAL=${EDITOR}
export BIBINPUTS=${HOME}/work/central-bibliography:${BIBINPUTS}
export TERM=xterm-256color
export LESS='-FXR'

# PIP settings
PIP_CACHE_DIR=${HOME}/.cache/pip
PIP_WHEEL_DIR=${PIP_CACHE_DIR}/wheels
test -d ${PIP_WHEEL_DIR} || mkdir -p ${PIP_WHEEL_DIR}
export PIP_DOWNLOAD_CACHE=${PIP_CACHE_DIR}
export PIP_USE_WHEEL='yes'
export PIP_WHEEL_DIR
export PIP_FIND_LINKS=file://${PIP_WHEEL_DIR}
export PIP_RESPECT_VIRTUALENV=true

# Taken from grb's zshrc

# By default, zsh considers many characters part of a word (e.g., _ and -).
# Narrow that down to allow easier skipping through words via M-f and M-b.
export WORDCHARS='*?[]~&;!$%^<>'

alias ipy='ipython'
alias p=python
alias pydoc='=python -m pydoc'
alias g='git'
alias gst='=git st'
alias es='exec $SHELL'
alias v=vim

# SSH into the ngts ops machine
alias ngtshead="ssh -t ngtshead.astro exec zsh"


# Update vim plugins
alias vpi='=vim +PlugInstall +qa'
alias vpu="=vim '+PlugUpdate'"

# Ruby aliases
alias bcb='bundle check; bundle install --binstubs .bundle/bin'
alias be='bundle exec'

# Function for finding my pi
function __active_interface() {
    local ifconfig_path=/sbin/ifconfig
    for interface in en0 en1; do
        if ${ifconfig_path} ${interface} | xargs | grep -q 192 2>&1 >/dev/null; then
            echo $interface
            return
        fi
    done
}

function find_pi() {
    echo "Usage may require sudo password"
    sudo arp-scan --interface=`__active_interface` --localnet | grep b8:27:eb | awk '{print $1}'
}

case $OSTYPE in
    linux*)
        export BROWSER=firefox
        export STORAGE=/storage/astro2/`whoami`
        export BUILD_PREFIX="${STORAGE}/prefix"
        export PATH=${BUILD_PREFIX}/bin:${HOME}/.gem/ruby/1.8/bin:${PATH}
        export LD_LIBRARY_PATH=${BUILD_PREFIX}/lib:${LD_LIBRARY_PATH}
        export LS_OPTIONS=--color=never

        # Set up the module command
        function module() { eval `modulecmd zsh $*`; }

        alias lsc='ls --color=auto'
        export work=${HOME}/work/
        alias open='xdg-open 2>/dev/null'


        ;;
    darwin*)
        export PATH=${PATH}:/usr/texbin:${GOPATH}/bin:/usr/local/sbin:/sbin:/usr/sbin:${HOME}/.cabal/bin
        alias gvim=mvim
        alias gview=mview
        alias -g awk=gawk
        alias lsc='ls -G'
        export work=${HOME}/work/Warwick/PostDoc/

        # Configure chruby
        source /usr/local/opt/chruby/share/chruby/chruby.sh
        chruby 2.0
        ;;
esac

export WASP="${work}/WASP"
export NGTS="${work}/NGTS"
alias work="cd ${work} && pwd && ls"
alias ngts="cd ${NGTS} && pwd && ls"
alias wasp="cd ${WASP} && pwd && ls"
alias dotfiles="cd ${HOME}/dotfiles && pwd"
alias dev="cd ${HOME}/Development && pwd && ls"

function init-python() {
    local readonly fname="$1"
    cat >${fname} <<EOL
#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division, print_function, absolute_import

def main():
    pass

if __name__ == '__main__':
    main()
EOL
    chmod +x ${fname}
    vim ${fname}
}

# Use anaconda if available
if [[ -d ${HOME}/anaconda ]]; then
    export PATH=${HOME}/anaconda/bin:${PATH}
fi

# pythonpy completion
if [[ -f ${HOME}/anaconda/bash_completion.d/pycompletion.sh ]]; then
    bashcompinit
    source ${HOME}/anaconda/bash_completion.d/pycompletion.sh
fi

# Source the custom zshrc.local file in the system
if [[ -f ${HOME}/.zshrc.local ]]; then
    source ${HOME}/.zshrc.local
fi

# Setup direnv
eval "$(direnv hook $0)"

# Finally source the theme
source ${HOME}/.zsh/srwalker101.zsh-theme
