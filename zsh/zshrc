export PATH=/usr/local/bin:${PATH}
fpath=($HOME/.zsh/func $HOME/.zsh/completion $fpath)
typeset -U fpath

autoload -U compinit
compinit


# Emacs keybindings
bindkey -e

# Set up editor in command line
autoload edit-command-line
zle -N edit-command-line
bindkey '^Xe' edit-command-line

autoload -U colors
colors

setopt interactivecomments
setopt rmstarsilent
setopt prompt_subst
setopt inc_append_history
setopt share_history
unsetopt auto_pushd

# Only unique history entries in the reverse history search HIST_FIND_NO_DUPS=1
setopt hist_ignore_all_dups
setopt hist_ignore_dups


# Ignore duplicate history entries
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes

# Speed up completion
zstyle ':completion:*' accept-exact '*(N)'

# Use a cache for completion
zstyle ':completion:*' use-cache on


HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000

# Function to attach to a session. If the session is not specified then
#just run `tmux attach`, otherwise add a -t flag
function _tmux_attach() {
    if [ $1 ]; then
        tmux attach -t $1
    else
        tmux attach
    fi
}

# From GRB
function mcd() { mkdir -p $1 && cd $1 }

# Alias some tmux commands
alias ta=_tmux_attach
alias tns="tmux new-session -s"
alias tls="tmux ls"

# Run irssi with the correct TERM variable
alias irssi="TERM=screen-256color irssi"

export GOPATH=${HOME}/Development/gocode
export PATH=${HOME}/.bin:${HOME}/prefix/bin:${PATH}:bin

export EDITOR=vim_nox
export VISUAL=${EDITOR}
export BIBINPUTS=${HOME}/work/central-bibliography:${BIBINPUTS}
export TERM=xterm-256color
export LESS='-FXR'

# Taken from grb's zshrc

# By default, zsh considers many characters part of a word (e.g., _ and -).
# Narrow that down to allow easier skipping through words via M-f and M-b.
export WORDCHARS='*?[]~&;!$%^<>'

# run ipython with no arguments, but normal python if args
function python() {
    if [[ $# -ge 1 ]]; then
        if [[ "$1" == "--pylab" ]]; then
            ipython --pylab
        else
            command python "$@"
        fi
    else
        command ipython
    fi
}

alias py='python'
alias ipy='ipython'
alias pydoc='=python -m pydoc'
alias vi=vim_nox
alias g='git'
alias gst='=git st'
alias gcm='=git commit -m'
alias gse='=git sync && exit'
alias sc="=vim +Scratch"
alias es='exec $SHELL'

# Update vim plugins
alias vbi='=vim +BundleInstall +qa'
alias vbu="=vim '+BundleInstall!'"

# Ruby aliases
alias bcb='bundle check; bundle install --binstubs .bundle/bin'
alias be='bundle exec'

if which hub > /dev/null; then alias git=hub; fi

# Function for finding my pi
function __active_interface() {
    local ifconfig_path=/sbin/ifconfig
    for interface in en0 en1; do
        if ${ifconfig_path} ${interface} | xargs | grep -q 192 2>&1 >/dev/null; then
            echo $interface
            return
        fi
    done
}

function find_pi() {
    echo "Usage may require sudo password"
    sudo arp-scan --interface=`__active_interface` --localnet | grep b8:27:eb | awk '{print $1}'
}

case $OSTYPE in
    linux*)
        export LD_LIBRARY_PATH=${HOME}/prefix/lib:${LD_LIBRARY_PATH}
        export LS_OPTIONS=--color=never

        # Set up the module command
        function module() { eval `modulecmd zsh $*`; }

        VIRTUALENV_DIR=${HOME}/PythonEnv
        VIRTUALENV_SOURCE_FILE=${VIRTUALENV_DIR}/bin/activate
        if [[ -f ${VIRTUALENV_SOURCE_FILE} ]]; then
            # Set up the python environment
            # Set the environment variable for only this env to disable the prompt
            VIRTUAL_ENV_DISABLE_PROMPT=1 source ${VIRTUALENV_SOURCE_FILE}
            # export PYTHONPATH=${VIRTUALENV_DIR}/lib/python2.7/site-packages:$PYTHONPATH
        fi

        alias lsc='ls --color=auto'

        SSHAGENT=/usr/bin/ssh-agent
        SSHAGENTARGS="-s"
        if [ -z "$SSH_AUTH_SOCK" -a -x "$SSHAGENT" ]; then
            eval `$SSHAGENT $SSHAGENTARGS`
            trap "kill $SSH_AGENT_PID" 0
        fi

        ;;
    darwin*)
        export PATH=${HOME}/.rvm/bin:${PATH}:/usr/texbin:${GOPATH}/bin
        alias gvim=mvim
        alias gview=mview
        alias -g awk=gawk
        alias lsc='ls -G'
        ;;
esac

# Function to make a new tmux session at a variable location
function make-tmux-session() {
    if [[ $# -gt 0 ]]; then
        if [[ $# -gt 1 ]]; then
            return
        fi

        DIRNAME="$1"
        if [[ ! -d ${DIRNAME} ]]; then
            mkdir ${DIRNAME}
        fi

    else
        DIRNAME=$(pwd)
    fi

    cd $DIRNAME
    TMUXNAME=$(basename `pwd`)
    tns ${TMUXNAME}

}

# Source the custom zshrc.local file in the system
if [[ -f ${HOME}/.zshrc.local ]]; then
    source ${HOME}/.zshrc.local
fi

# Finally source the theme
source ${HOME}/.zsh/srwalker101.zsh-theme
