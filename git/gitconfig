[alias]
    # Long form aliases
    # See https://github.com/GitAlias/gitalias/blob/master/gitalias.txt
    publish = "!git push -u origin $(git branch-name)"
    unpublish = "!git push origin :$(git branch-name)"
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    graphviz = !"f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
    trust = "!f() { echo 'marking current directory as safe (includes ./bin on PATH)' && mkdir -p .git/safe; }; f"

    graph = log --graph --all --decorate --stat --date iso
    # Scripting aliases
    # -- always run command at the root of the git repo
    exec = ! exec

    # command to get the current sha
    sha = rev-parse --short HEAD

    # Taken from https://blog.scottnonnenberg.com/better-git-configuration/
    prune = fetch --prune

    # Taken from http://www.theodo.fr/blog/2017/06/git-game-advanced-git-aliases/
    # Ignore whatever is passed
    ignore = "!f() { echo \"$1\" >> .gitignore; }; f"
    unpushed = log @{u}..

    # Other aliases
    ff = !"f() { git merge --ff-only origin/$(git branch-name); }; f"
    st = status
    co = checkout
    su = submodule update --init --recursive
    pr = pull --rebase --prune
    pullff = pull --ff-only
    pushff = push --ff-only
    mergeff = merge --ff-only
    sync = !git pr && git push
    wdiff = diff --color-words
	ci = commit -v
    c = commit -m
    q = quick
    edit = "!vim `git ls-files -m`"
    # Quickly diff the upstream remote (assume origin)
    diffup = diff origin
    upsub = submodule foreach 'git checkout master && git pull'

    # https://thoughtbot.com/blog/powerful-git-macros-for-automating-everyday-workflows
    branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
    tags = tag
    stashes = stash list
    unstage = reset -q HEAD --
    discard = checkout --
    amend = commit --amend
    precommit = diff --cached --diff-algorithm=minimal -w
    pre = precommit


    #Â Logging from Gary Bernhardt
    l = log --graph --decorate --pretty=format:'%C(auto)%h%C(reset) %C(green)(%ar)%C(reset) %C(blue)[%an]%C(auto) %d %s%C(auto)' --exclude='refs/bugs/*' --exclude='refs/identities/*' --all
    la = l
    head = l -1
    h = head
    r = l -20
    ra = r
    dc = precommit
    aa = add --all
    aap = add --all --patch
    oneline = log --oneline --decorate
    today = diff @{yesterday}..
    last = log -1
    unstage = reset HEAD
	up = update
[color]
    ui = auto
[core]
    abbrev = 12
    autocrlf = input
    safecrlf = true
    whitespace = fix
    editor = vim_or_nvim
    mergeoptions = --no-ff
    preloadindex = true
    excludesfile = ~/.gitignore_global
	ignorecase = false
[merge]
    tool = conflicted
    conflictstyle = "diff3"
[transfer]
    fsckobjects = true
[push]
    default = simple
    followTags = true
[diff]
    algorithm = patience
    tool = icdiff
[difftool]
    prompt = false
[difftool "icdiff"]
    cmd = icdiff --line-numbers $LOCAL $REMOTE
[difftool "opendiff"]
    path = opendiff
[mergetool "diffconflicts"]
    cmd = "diffconflicts vim $BASE $LOCAL $REMOTE $MERGED"
    trustExitCode = true
    keepBackup = false
[mergetool "splice"]
    cmd = "vim $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
    trustExitCode = true
[mergetool "ediff"]
    cmd = emacs --eval \"(ediff-merge-files-with-ancestor \\\"$LOCAL\\\" \\\"$REMOTE\\\"    \\\"$BASE\\\" nil \\\"$MERGED\\\")\"
[mergetool "conflicted"]
    cmd = "vim +Conflicted"
[fetch]
    # Always prune when fetching and pulling
    prune = 1
[grep]
    extendedRegexp = true
[status]
    short = 1
    branch = 1
    submoduleSummary = true
[init]
    templatedir = ~/.gittemplate
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
    required = true
	process = git-lfs filter-process
[credential]
	helper = cache
[mergetool]
	prompt = false
[gpg]
	program = gpg2
[cinnabar]
	helper = /home/simon/.git-cinnabar/git-cinnabar-helper
	fsck = 1575586067
[include]
	path = ~/.gitlocalconfig/local
