"  Init
" Remap the leader key to comma
let g:mapleader=','
let g:maplocalleader='\\'

if &compatible | set nocompatible | endif

augroup vimrc
    autocmd!
augroup END

" 
"  Plugins
"  Vim Plug
call plug#begin('~/.vim/bundle')

" Language plugins
Plug 'cespare/vim-toml'
Plug 'Valloric/python-indent'
Plug 'rust-lang/rust.vim'
Plug 'vim-scripts/TWiki-Syntax'
Plug 'tpope/vim-markdown'

" Other plugins
Plug 'christoomey/vim-tmux-runner'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install --no-update-rc --no-completion --key-bindings' }
Plug 'junegunn/fzf.vim'
Plug 'kassio/neoterm'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'

call plug#end()

" Disable backspace as it's an anti-pattern
set nonumber
set norelativenumber
set noswapfile
set ignorecase
set smartcase
set tabstop=4
set expandtab
set shiftwidth=4
set incsearch
set mouse=a
set linebreak
set smartindent
set cindent
set report=0
if !has('nvim')
    set noesckeys
endif
set hidden
set lazyredraw
set shortmess=atI
set wildignore+=*.aux,*.o,*.git,/tmp/*,*.so,*.swp,*.zip,venv,.venv,env,*.pyc
set switchbuf=useopen
set softtabstop=4
set shiftround
set noshowmatch
set matchtime=0
set tags=.git/tags,tags;/
set nowrap

" Search with fancy regex search by default
nnoremap / :FzfBLines<Cr>
" nnoremap / /\v
" nnoremap ? ?\v

" Add mapping for copying all file contents into the system buffer
nnoremap cp :0,$y+<Cr>

" Swap the mark keys
nnoremap ' `
nnoremap ` '

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

if executable('rg')
    set grepprg=rg\ --color\ never\ --vimgrep
elseif executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor
endif

nnoremap <space> :nohlsearch<cr>

" Neoterm
let g:neoterm_use_relative_path = 1

" FZF
set rtp+=~/.fzf
let g:fzf_command_prefix = 'Fzf'
nnoremap <leader>f :FzfGitFiles<cr>
nnoremap gb :FzfBuffers<cr>
nnoremap gs :FzfTags<cr>
nnoremap gL :FzfLines<cr>
nnoremap gl :FzfBLines<cr>
nnoremap <leader>a :FzfAg<cr>

" Fugitive
nnoremap <leader>gc :Gcommit -v<cr>
nnoremap <leader>gd :Gdiff<cr>
nnoremap <leader>gw :Gwrite<cr>
nnoremap <leader>gr :Gread<cr>
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>ga :Gcommit -v --amend<cr>

let g:commentary_map_backslash = 0

" Configure vim tmux runner
let g:VtrStripLeadingWhitespace = 0
let g:VtrClearEmptyLines = 0
let g:VtrAppendNewline = 1

nnoremap <leader>v :VtrAttachToPane<cr>

" Create shorter 'V' command which is easier to type
command! -nargs=? V call VtrSendCommand(<f-args>)

" Remap the move-window keys
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" Change the way tab autocompletion works
set wildmode=longest,list:longest

" Add mapping to open/close the quickfix list
" Taken from this plugin:
" https://github.com/drmingdrmer/vim-toggle-quickfix/blob/master/plugin/toggle-quickfix.vim
if exists("g:__QUICKFIX_TOGGLE_jfklds__")
    finish
endif
let g:__QUICKFIX_TOGGLE_jfklds__ = 1

fun! s:QuickfixToggle()

    let nr = winnr("$")
    cwindow
    let nr2 = winnr("$")
    if nr == nr2
        cclose
    endif

endfunction
nnoremap coq :call <SID>QuickfixToggle()<cr>

" Bind K to grep word under cursor
nnoremap <silent> K :grep! "<C-R><C-W>"<cr><cr>\|:copen<Cr>

" Neoformat
let g:neoformat_only_msg_on_error = 1

if has('nvim')
	if hostname() =~? "ngts"
		let g:python_host_prog = '/home/sw/.pyenv/versions/2.7.11/bin/python'
		let g:python3_host_prog = '/home/sw/.pyenv/versions/miniconda3-latest/bin/python'
		set shell=/home/sw/.local/bin/zsh
	else
		let g:python_host_prog = '/usr/local/bin/python'
		let g:python3_host_prog = '/usr/local/bin/python3'
		set shell=/usr/local/bin/zsh
	endif

endif

if has('termguicolors')
    set termguicolors
endif

colorscheme lucius

" Customise the colour scheme a little

" Make the colour column a little bit more subtle
" Dark background: 237
" Light background: 15
highlight ColorColumn ctermbg=237 guibg=#494949

" Make the search result a little less jarring
highlight Search guibg=none gui=underline

" Highlight trailing whitespace
highlight ExtraWhitespace ctermbg=237 guibg=#333333
autocmd Syntax * syn match ExtraWhitespace /\s\+$/

" vim: foldmethod=marker

